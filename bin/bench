#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'benchmark/ips'

require_relative '../lib/parse_tree'
require 'ruby_parser'
require 'parser/current'

def compare(filepath)
  prefix = "#{File.expand_path('..', __dir__)}/"
  puts "=== #{filepath.delete_prefix(prefix)} ==="

  source = File.read(filepath)

  Benchmark.ips do |x|
    x.report('parse_tree') { ParseTree.new(source).parse }
    x.report('parser') { Parser::CurrentRuby.parse(source) }
    x.report('ruby_parser') { RubyParser.new.parse(source) }
    x.compare!
  end  
end

filepaths = ARGV

# If the user didn't supply any files to parse to benchmark, then we're going to
# default to parsing this file and the main parse_tree file (a small and large
# file).
if filepaths.empty?
  filepaths = [
    File.expand_path('bench', __dir__),
    File.expand_path('../lib/parse_tree.rb', __dir__)
  ]
end

filepaths.each { |filepath| compare(filepath) }
